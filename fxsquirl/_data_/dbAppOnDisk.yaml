---
<(META)>:
  docid: <^[uuid]^>
  name: App On Disk Database
  description: >
    The Application stores preferences and connections to each file used
  expirary: <[expiration]>
  version: <[version]>
  path: <[LEXIvrs]>
  outline: <[outline]>
  authority: document|this
  security: sec|lvl2
  <(WT)>: -32
'tables':
  'preferences':
    columns: ['name', 'value']
    'records':
  'configurations':
    'columns': ['name', 'value']
    'records':
  cache:
    'name':
    'description': >
      App Cache table is used for holding data moved down from the AppInMem and
      SharedInMem databases this is heavily used during a crash or fast shutdown but also
      to a lesser extent during normal operation of moving shuttling data from
      the AppInMem and SharedInMem databases
    'columns':
      'cacheid':
        'DType': INTEGER
        'Options': 'AUTOINCREMENT'
      'cachedtid':
        'DType': 'TEXT'
        'Options':
      'docuuid':
        'DType': 'TEXT'
      '<@[column]@>':
        'DType': 'TEXT'
      'creby':
        'DType': 'INTEGER'
        'Options':
      'creon':
        'DType': 'TEXT'
        'Options':
      'modbY':
        'DType': 'INTEGER'
        'Options': INTEGER'
      'modon':
        'DType': 'TEXT'
        'Options':
      'dlt':
        'DType': 'BOOLEAN'
        'Constraints': NOT NULL DEFAULT (0)'
        'Options':
      'actv':
        'DType': 'BOOLEAN'
        'Options': NOT NULL DEFAULT (1)'
    'cmd': >
      DROP TABLE IF EXISTS _cmd;
      CREATE TABLE _cmd (
      cmdID INTEGER PRIMARY KEY ON CONFLICT ROLLBACK AUTOINCREMENT UNIQUE NOT NULL,
      cmdUUID TEXT UNIQUE, CacheDTID TEXT, DocUUID TEXT, TEXT TEXT);
  'doc':
    'description': >
      'Store Entries to Organize Sections into a Document allowing for proper formatting'
      'and versioning for the document sections'
      'A Doc is a tree of Sectn sequences...the branches provide for different views'
      'of the same document like values, formulas, formats'
    'columns':
      'docid':
      'docuuid':
      'histag':
      'name':
      'seq':
      'sectnuuid':
      'dtid':
      'ownruuid':
      'creby':
        'DType': 'INTEGER'
        'Options':
      'creon':
        'DType': 'TEXT'
        'Options':
      'modbY':
        'DType': 'INTEGER'
        'Options': INTEGER'
      'modon':
        'DType': 'TEXT'
        'Options':
      'dlt':
        'DType': 'BOOLEAN'
        'Constraints': NOT NULL DEFAULT (0)'
        'Options':
      'actv':
        'DType': 'BOOLEAN'
        'Options': NOT NULL DEFAULT (1)'
    'cmd': >
      'DROP TABLE IF EXISTS _doc;'
      'CREATE TABLE _doc ('
        'docID INTEGER PRIMARY KEY ON CONFLICT ROLLBACK AUTOINCREMENT UNIQUE NOT NULL,'
        'docUUID TEXT, histTag TEXT, Name TEXT, Seq TEXT, SectnUUID TEXT, DTID TEXT,'
        'ownrUUID  TEXT, [Group]);'
    'columns':
      'docID':
        'DType': 'INTEGER'
      'docUUID':
        'DType': 'TEXT'
      'histTag':
        'DType': 'TEXT'
      'name':
        'DType': 'TEXT'
      'seq':
        'DType': 'TEXT'
      'sectnuuid':
        'DType': 'TEXT'
      'dtid':
        'DType': 'TEXT'
      'ownruuid':
        'DType': 'TEXT'
        'Options':
      'group':
        'DType': 'TEXT'
        'Options':
      'creby':
        'DType': 'INTEGER'
        'Options':
      'creon':
        'DType': 'TEXT'
        'Options':
      'modbY':
        'DType': 'INTEGER'
        'Options': INTEGER'
      'modon':
        'DType': 'TEXT'
        'Options':
      'dlt':
        'DType': 'BOOLEAN'
        'Constraints': NOT NULL DEFAULT (0)'
        'Options':
      'actv':
        'DType': 'BOOLEAN'
        'Options': NOT NULL DEFAULT (1)'
  'db':
    'description': >
      Docbs stores the databases actively connected from Pyffice. Allow for a
      Project DocB config file to be loaded change all actively connected
      Pyffice files
    'terms':
    'columns':
      dbid:
        'DType': 'TEXT'
        'Options':
      dbuuid:
        'DType': 'TEXT'
        'Options':
      name:
        'DType': 'TEXT'
        'Options':
      sessionuuid:
        'DType': 'TEXT'
        'Options':
      'creby':
        'DType': 'INTEGER'
        'Options':
      'creon':
        'DType': 'TEXT'
        'Options':
      'modbY':
        'DType': 'INTEGER'
        'Options': INTEGER'
      'modon':
        'DType': 'TEXT'
        'Options':
      'dlt':
        'DType': 'BOOLEAN'
        'Constraints': NOT NULL DEFAULT (0)'
        'Options':
      'actv':
        'DType': 'BOOLEAN'
        'Options': NOT NULL DEFAULT (1)'
    cmd: >
      DROP TABLE IF EXISTS docbs;
      CREATE TABLE docbs (
        DocBs INTEGER PRIMARY KEY ON CONFLICT ROLLBACK AUTOINCREMENT UNIQUE NOT NULL,
        DocBUUID TEXT, DocUUID TEXT UNIQUE, DocVersion TEXT, DBType TEXT, LOCI TEXT);
  'fx':
    description: >
    columns:
      'fxid':
      'fxuuid':
      'creby':
        'DType': 'INTEGER'
        'Options':
      'creon':
        'DType': 'TEXT'
        'Options':
      'modbY':
        'DType': 'INTEGER'
        'Options': INTEGER'
      'modon':
        'DType': 'TEXT'
        'Options':
      'dlt':
        'DType': 'BOOLEAN'
        'Constraints': NOT NULL DEFAULT (0)'
        'Options':
      'actv':
        'DType': 'BOOLEAN'
        'Options': NOT NULL DEFAULT (1)'
    cmd: >
      DROP TABLE IF EXISTS m_fx;
      CREATE TABLE m_fx (
        fxID INTEGER PRIMARY KEY ON CONFLICT ROLLBACK AUTOINCREMENT UNIQUE NOT NULL,
        fxUUID TEXT UNIQUE, C0 TEXT, Cn TEXT);
  'msg':
    'description': >
      'Handle in app messages for collaboration purposes both human and
      'machine commmunication'
      'A Message will be used to convey information between'
      'copies of the file and users...a seperate mechanism of'
      'storage will be used for speed to help with concurrency'
      'syncing across networks'
    'columns':
      'from':
        DType: 'TEXT'
      'to':
        DType: 'TEXT'
      'body':
        DType: 'TEXT'
      'anchor':
        DType: 'TEXT'
      'channel':
        DType: 'TEXT'
      'note':
        DType: 'TEXT'
      'state':
        DType: 'TEXT'
      'creby':
        'DType': 'INTEGER'
        'Options':
      'creon':
        'DType': 'TEXT'
        'Options':
      'modbY':
        'DType': 'INTEGER'
        'Options': INTEGER'
      'modon':
        'DType': 'TEXT'
        'Options':
      'dlt':
        'DType': 'BOOLEAN'
        'Constraints': NOT NULL DEFAULT (0)'
        'Options':
      'actv':
        'DType': 'BOOLEAN'
        'Options': NOT NULL DEFAULT (1)'
    cmd: >
      DROP TABLE IF EXISTS _msg;
      CREATE TABLE _msg (
        msgID INTEGER PRIMARY KEY ON CONFLICT ROLLBACK AUTOINCREMENT UNIQUE NOT NULL,
        From TEXT, To TEXT, Body TEXT, Anchor TEXT, Channel TEXT, Note TEXT, State TEXT);
  'opt':
    'description': >
    'terms':
    'columns':
      'uuid':
        DType: 'TEXT'
      'name':
        DType: 'TEXT'
      '[table]':
        DType: 'TEXT'
      'tbloptionid':
        DType: 'INTEGER'
      'type':
        DType: INTEGER'
      'description':
        DType: 'BLOB'
      'extension':
        DType: 'TEXT'
      'creby':
        'DType': 'INTEGER'
        'Options':
      'creon':
        'DType': 'TEXT'
        'Options':
      'modbY':
        'DType': 'INTEGER'
        'Options': INTEGER'
      'modon':
        'DType': 'TEXT'
        'Options':
      'dlt':
        'DType': 'BOOLEAN'
        'Constraints': NOT NULL DEFAULT (0)'
        'Options':
      'actv':
        'DType': 'BOOLEAN'
        'Options': NOT NULL DEFAULT (1)'
    cmd: >
      DROP TABLE IF EXISTS _opt;
      CREATE TABLE _opt (
        optID INTEGER PRIMARY KEY ON CONFLICT ROLLBACK AUTOINCREMENT UNIQUE NOT NULL,
        optUUID TEXT UNIQUE, [Table] TEXT, tblOptionID INTEGER, Type INTEGER, Name TEXT,
        Description BLOB);
  'perf':
    name: '_perf'
    description: >
      The _perf Table will hold information that tracks and optimizes the
      performance of the running instance FxSQuRIL Track # of transactions by
      table and db store the size of the transactions and the overall size of
      the db try to determine working ranges of data some tables maybe large
      but typically only work with the first x rows or most recent or specific
      view
    'tmplt':
      'metrics':
        files:
          -
            name:
            lastOpen:
            lastPath:
        bgTbl:
          size: [cols, rows, versions]
        state: saved, crashed, closed, cleaned
        score: <[session_perf]>
    'terms':
    'columns':
      perfid:
        'DType': 'TEXT'
        'Options':
      perfuuid:
        'DType': 'TEXT'
        'Options':
      data:
      'creby':
        'DType': 'INTEGER'
        'Options':
      'creon':
        'DType': 'TEXT'
        'Options':
      'modbY':
        'DType': 'INTEGER'
        'Options': INTEGER'
      'modon':
        'DType': 'TEXT'
        'Options':
      'dlt':
        'DType': 'BOOLEAN'
        'Constraints': NOT NULL DEFAULT (0)'
        'Options':
      'actv':
        'DType': 'BOOLEAN'
        'Options': NOT NULL DEFAULT (1)'
    cmd: >
      DROP TABLE IF EXISTS _perf;
      CREATE TABLE _perf (
        perfID INTEGER PRIMARY KEY ON CONFLICT ROLLBACK AUTOINCREMENT UNIQUE NOT NULL,
        perfUUID TEXT UNIQUE);
  'run':
    'description': >
      Run table is a log of cmds ran in the application not related to a user
      file there will be a mechanism for compaction of the run log to decrease
      file size but deleting history of the log
    'columns':
      op:
        'DType':
      path:
        'DType':
      'stateid':
        'DType': 'INTEGER'
        'Options':
          0:
          1:
          2:
      'statusid':
        'DType': 'INTEGER'
        'Options':
          0:
          1:
          2:
      'typeid':
        'DType': 'INTEGER':
        'Options':
          0: Python
          1: Bash
          2: SQL
          3: OpenOffice
          4: Minitab
          5: Excel
          6: Tableau
          7: PowerBI
          8: CrystalReports
      pid:
        'DType':
        'Options':
      uid:
        'DType': INTEGER
        'Options':
      'creby':
        'DType': 'INTEGER'
        'Options':
      'creon':
        'DType': 'TEXT'
        'Options':
      'modbY':
        'DType': 'INTEGER'
        'Options': INTEGER'
      'modon':
        'DType': 'TEXT'
        'Options':
      'dlt':
        'DType': 'BOOLEAN'
        'Constraints': NOT NULL DEFAULT (0)'
        'Options':
      'actv':
        'DType': 'BOOLEAN'
        'Options': NOT NULL DEFAULT (1)'
    cmd: >
      CREATE TABLE _run (
        runID INTEGER PRIMARY KEY ON CONFLICT ROLLBACK AUTOINCREMENT UNIQUE NOT NULL,
        UUID INTEGER, StateID INTEGER, StatusID INTEGER, TypeID INTEGER, pid INTEGER,
        OP TEXT, uid INTEGER, Path TEXT);
  'sectn':
    'description': >
      A Sectn is a chunk of a document.  A chunk can have 2 dimensions
      rows and columns, these are combinined into a single cell for storage and light
      consumption
    columns:
      sectnid:
        'DType': 'INTEGER'
        'Constraints': PRIMARY KEY ON CONFLICT ROLLBACK AUTOINCREMENT UNIQUE NOT NULL
        'Options':
      sectnuuid:
        'DType': 'TEXT'
        'Options':
      sectnsize:
        'DType': 'TEXT'
        'Options':
      text:
        'DType': 'TEXT'
        'Options':
      dtid:
        'DType': 'TEXT'
        'Options':
      type:
        'DType': 'TEXT'
        'Options':
      state:
        'DType': 'TEXT'
        'Options':
      'creby':
        'DType': 'INTEGER'
        'Options':
      'creon':
        'DType': 'TEXT'
        'Options':
      'modbY':
        'DType': 'INTEGER'
        'Options': INTEGER'
      'modon':
        'DType': 'TEXT'
        'Options':
      'dlt':
        'DType': 'BOOLEAN'
        'Constraints': NOT NULL DEFAULT (0)'
        'Options':
      'actv':
        'DType': 'BOOLEAN'
        'Options': NOT NULL DEFAULT (1)'
    'terms':
      'columns':
        - <[table.:UUID UNIQUE]>
    cmd: >
      DROP TABLE IF EXISTS _sectns;
      CREATE TABLE _sectns (
        sectnsID INTEGER PRIMARY KEY ON CONFLICT ROLLBACK AUTOINCREMENT UNIQUE NOT NULL,
        sectnUUID TEXT, sectnSize TEXT, Text BLOB, DTID TEXT, Type INTEGER, State);
  'usr':
    'description': >
    'terms':
    'columns':
      'usrid':
      'usruuid':
      'name':
      'sessionuuid':
    cmd: >
      DROP TABLE IF EXISTS _usr;
      CREATE TABLE _usr (
        usrID INTEGER PRIMARY KEY ON CONFLICT ROLLBACK AUTOINCREMENT UNIQUE NOT NULL,
        usrUUID TEXT UNIQUE, Name TEXT, sessionUUID TEXT);

views:
  DocGroups:
    cmd: >
  Docs:
    cmd: >
  DocStates:
    cmd: >
  fullDoc:
    cmd: >
  FileTypes:
    cmd: >
      CREATE VIEW Filetypes AS
      SELECT
        *
      FROM _opt
      WHERE Type = 'FILE'
      ORDER BY
        [Table] ASC,
        tblOptionID ASC;
  fullTable:
    cmd: >
      CREATE VIEW fullTable AS
      SELECT
        *
      FROM t_docs
      INNER JOIN t_sectns ON t_docs.sectnUUID = t_sectns.SectnUUID
      ORDER BY
        t_docs.DocID ASC,
        t_docs.Seq ASC;
  SectnsWLookup:
    cmd: >
      CREATE VIEW SectnsWLookup AS
      SELECT
        *
      FROM t_sectns
      INNER JOIN (
        SELECT
          _opt.tblOptionID,
          _opt.Name
        FROM _opt
        WHERE Type = 'File'
      ) AS ftype ON t_sectns.Type = ftype.tblOptionID;
  shrPair:
    cmd: >
      CREATE VIEW shrPair AS
      SELECT
        *
      FROM t_docs;
  uniqueSectnHASH:
    cmd: >
      CREATE VIEW unqiueSectnHASH AS
      SELECT
        hex([Text]) AS [HEX]
      FROM t_sectns
      GROUP BY
        [HEX];
  v_doc:
    cmd: >
      CREATE VIEW v_doc AS
      SELECT
        *
      FROM t_docs
      INNER JOIN t_sectns ON t_docs.sectnUUID = t_sectns.SectnUUID
      WHERE t_docs.Name = 'tkSheet'
      ORDER BY t_docs.Seq ASC;
